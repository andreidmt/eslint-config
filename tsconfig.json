{
	"compilerOptions": {
    // Target latest version of ECMAScript
    "target": "esnext",

    // Search under node_modules for non-relative imports
    "moduleResolution": "node",

    // Allows importing modules with a ".json" extension. This includes
    // generating a type for the import based on the static JSON shape.
    "resolveJsonModule": true,

    // Process & infer types from .js files
    "allowJs": true,

    // Import non-ES modules as default imports
    "esModuleInterop": true,

    // Enable strictest settings like strictNullChecks & noImplicitAny
    "strict": true,

    // Skip type checking of declaration files.
    // This can save time during compilation at the expense of type-system
    // accuracy. For example, two libraries could define two copies of the same
    // type in an inconsistent way. Rather than doing a full check of all d.ts
    // files, TypeScript will type check the code you specifically refer to in
    // your appâ€™s source code.
    "skipLibCheck": true,

    // Also emit ".d.ts" files
    "declaration": true,

    // Destination of compiled code
    "outDir": "dist"
	},
	"include": [
		"src"
	]
}
